setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
qplot(i, time, data = dat.0,
xlab = "Time to retrieve a random element", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''))
}
ggsave(filename="png_fn.png")
View(dat.0)
df <- data.frame()
for (i in 10:24) {
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "Time to retrieve a random element", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
ggsave(filename=png_fn)
}
View(df)
ggplot(data=df, aes(x = i, y= time)) + geom_point()
ggplot(data=df, aes(x = i, y= time, col = arr_size)) + geom_point()
ggplot(data=df, aes(x = i, y= time, col = AS.FACTOR(arr_size))) + geom_point()
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point()
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + xlim(0, 5000)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 5000)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 200)
5000
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 5000)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 1000)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
for (i in 10:24) {
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
qplot(i, time, data = dat.0,
xlab = "iteration number", ylab = "time to retrieve a random element",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
ggsave(filename=png_fn)
}
for (i in 10:24) {
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
qplot(i, time, data = dat.0,
xlab = "iteration number", ylab = "time to retrieve a random element",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
ggsave(filename=png_fn)
}
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
df <- data.frame()
for (i in 10:24) {
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
ggsave(filename=png_fn)
}
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggsave(filename="aggregate_graph.png")
df <- data.frame()
for (i in 10:24:2) {
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
i
df <- data.frame()
for (i in seq(10,24,2)) {
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggsave(filename="aggregate_graph.png")
df <- data.frame()
for (i in seq(10,24,2)) {
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggsave(filename="aggregate_graph.png")
for (i in seq(10,24,2)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
df <- data.frame()
for (i in seq(10,24,4)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggsave(filename="aggregate_graph.png")
moveBy <- 1
df <- data.frame()
for (i in seq(10,24,1)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggsave(filename="aggregate_graph.png")
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_abline() + ylim(0, 900)
moveBy <- 1
df <- data.frame()
for (i in seq(10,24,1)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
# ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_abline() + ylim(0, 900)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_smooth() + ylim(0, 900)
moveBy <- 1
df <- data.frame()
for (i in seq(10,24,4)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
# ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_smooth() + ylim(0, 900)
ggsave(filename="aggregate_graph.png")
move_by <- 1
df <- data.frame()
for (i in seq(10,24,move_by)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
qplot(i, time, data = dat.0,
xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
}
# ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_point() + ylim(0, 900)
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_smooth() + ylim(0, 900)
ggsave(filename="aggregate_graph.png")
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_smooth() + ylim(0, 900) +
xlabel("time to retrieve a random element (nanoseconds)")
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) + geom_smooth() + ylim(0, 900) +
xlab("time to retrieve a random element (nanoseconds)")
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_smooth() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
main("Retrieving a random element from arrays of various size")
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_smooth() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
ggplot(data=df, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
ggsave(filename="aggregate_graph.png")
for (i in seq(10,24,move_by)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
ggsave(filename=png_fn)
}
c(1:10)
dat.0
dat.0$time
median(dat.0$time)
for (i in seq(10,24,move_by)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i] <- median(dat.0$time)
}
move_by <- 1
df <- data.frame()
medians <- c(0:24)
for (i in seq(10,24,move_by)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i] <- median(dat.0$time)
}
move_by <- 1
df <- data.frame()
medians <- c(1:14)
for (i in seq(10,24,move_by)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i-10] <- median(dat.0$time)
}
medians
for (i in seq(10,24,move_by)) {
print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i-10] <- median(dat.0$time)
print(median(dat.0$time))
}
for (i in seq(10,24,move_by)) {
#print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i-10] <- median(dat.0$time)
print(median(dat.0$time))
}
medians
for (i in seq(10,24,move_by)) {
#print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i-10+1] <- median(dat.0$time)
print(medians[i-10+1])
#print(median(dat.0$time))
}
medians
medians[0]
medians[1]
for (i in seq(10,24,move_by)) {
#print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i-9] <- median(dat.0$time)
#print(median(dat.0$time))
}
medians
for (i in seq(10,24,move_by)) {
#print(i)
arr_size <- 2 ** i
iters <- 1000
setwd("../data/.")
fn <- paste(arr_size, "-", iters, ".csv", sep="")
dat.0 <- read.csv(fn)
dat.0 <- mutate(dat.0, i = 1:nrow(dat.0))
df <- rbind(df, dat.0)
ggplot(data=dat.0, aes(x = i, y= time, col = as.factor(arr_size))) +
geom_path() + ylim(0, 900) +
ylab("time to retrieve a random element (nanoseconds)") +
xlab("iteration") +
ggtitle("Retrieving a random element from arrays of various size")
#   qplot(i, time, data = dat.0,
#         xlab = "time to retrieve a random element (nanoseconds)", ylab = "iteration number",
#         main = paste("Retrieveing a random element: arr_size = 2^", i, "and iters = ", iters, sep=''), col = as.factor(arr_size))
png_fn = paste(arr_size, "-", iters, ".png", sep="")
#ggsave(filename=png_fn)
# for Eitan graph:
medians[i-9] <- median(dat.0$time)
print(median(dat.0$time))
}
medians
ggplot(aes(x = c(10,24), y= medians))
ggplot(data=eitan_df, aes(x = c(10,24), y= medians))
eitan_df <- data.frame(
arr_size = c(10:24),
medians = medians)
ggplot(data=eitan_df, aes(x = c(10,24), y= medians))
ggplot(data=eitan_df, aes(x = c(10,24), y= medians)) + geom_point()
len(medians)
medians
length(medians)
length(c(10:24))
eitan_df
ggplot(data=eitan_df, aes(x = arr_size, y= medians)) + geom_point()
ggplot(data=eitan_df, aes(x = arr_size, y= medians), as.factor(arr_size)) + geom_point()
ggplot(data=eitan_df, aes(x = arr_size, y= medians, as.factor(arr_size)) + geom_point()
ggplot(data=eitan_df, aes(x = arr_size, y= medians, as.factor(arr_size))) + geom_point()
ggplot(data=eitan_df, aes(x = arr_size, y= medians, col = as.factor(arr_size))) + geom_point()
eitan_df <- data.frame(
arr_size = c(10:24),
medians = medians)
ggplot(data=eitan_df, aes(x = arr_size, y= medians, col = as.factor(arr_size))) + geom_point()
#   geom_path() + ylim(0, 900) +
ylab("time (nanoseconds)") +
xlab("arr_size (log_2 scale)") +
ggtitle("Median time to retrieve a random element from arrays of various size")
ggplot(data=eitan_df, aes(x = arr_size, y= medians, col = as.factor(arr_size))) + geom_point() +
ylab("time (nanoseconds)") +
xlab("Size of array (log_2 scale)") +
ggtitle("Median time to retrieve a random element from arrays of various size")
